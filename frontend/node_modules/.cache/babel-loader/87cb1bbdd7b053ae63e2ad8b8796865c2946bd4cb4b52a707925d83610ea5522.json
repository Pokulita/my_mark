{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uni\\\\SideStudies\\\\myProject\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport Logout from \"../components/Logout\";\nimport Login from \"./Login\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const onLogin = () => {\n    console.log(\"User logged in!\");\n    setIsLoggedIn(true); // Example action after login\n  };\n  const [username, setUsername] = useState(null);\n\n  // Check token on component mount\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      // Decode the token and extract the username\n      const decodedToken = jwtDecode(token);\n      setUsername(decodedToken.username); // Assuming the username is stored in the token\n    } else {\n      setUsername(null);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: username ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"logout-go-back\",\n        children: \"Back to main page.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) // Display username if token is present\n    : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"fuQuQPBLa95HM13LXw9e6cqu448=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","jwtDecode","Logout","Login","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","isLoggedIn","setIsLoggedIn","onLogin","console","log","username","setUsername","token","localStorage","getItem","decodedToken","children","fileName","_jsxFileName","lineNumber","columnNumber","to","className","_c","$RefreshReg$"],"sources":["D:/Uni/SideStudies/myProject/frontend/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport Logout from \"../components/Logout\";\r\nimport Login from \"./Login\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction LoginPage() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const onLogin = () => {\r\n    console.log(\"User logged in!\");\r\n    setIsLoggedIn(true); // Example action after login\r\n  };\r\n\r\n  const [username, setUsername] = useState(null);\r\n\r\n  // Check token on component mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n\r\n    if (token) {\r\n      // Decode the token and extract the username\r\n      const decodedToken = jwtDecode(token);\r\n      setUsername(decodedToken.username); // Assuming the username is stored in the token\r\n    } else {\r\n      setUsername(null);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {username ? (\r\n        <>\r\n          <h2>Welcome, {username}</h2>\r\n          <Logout />\r\n\r\n          <Link to=\"/\" className=\"logout-go-back\">\r\n            Back to main page.\r\n          </Link>\r\n        </> // Display username if token is present\r\n      ) : (\r\n        <Login></Login>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMc,OAAO,GAAGA,CAAA,KAAM;IACpBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BH,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMkB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAE/C,IAAIF,KAAK,EAAE;MACT;MACA,MAAMG,YAAY,GAAGpB,SAAS,CAACiB,KAAK,CAAC;MACrCD,WAAW,CAACI,YAAY,CAACL,QAAQ,CAAC,CAAC,CAAC;IACtC,CAAC,MAAM;MACLC,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAgB,QAAA,EACGN,QAAQ,gBACPV,OAAA,CAAAE,SAAA;MAAAc,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,GAAI,WAAS,EAACN,QAAQ;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5BpB,OAAA,CAACJ,MAAM;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEVpB,OAAA,CAACF,IAAI;QAACuB,EAAE,EAAC,GAAG;QAACC,SAAS,EAAC,gBAAgB;QAAAN,QAAA,EAAC;MAExC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,eACP,CAAC,CAAC;IAAA,eAEJpB,OAAA,CAACH,KAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EACf;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChB,EAAA,CAvCQD,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAyClB,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}