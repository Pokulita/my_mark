{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uni\\\\SideStudies\\\\myProject\\\\frontend\\\\src\\\\components\\\\Body.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport axios from \"axios\";\nimport SingleCourse from \"./SingleCourse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Body() {\n  _s();\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      // Decode the token and extract the username\n      const decodedToken = jwtDecode(token);\n      setUsername(decodedToken.username); // Assuming the username is stored in the token\n    } else {\n      setUsername(null);\n    }\n  }, []);\n  const [username, setUsername] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      const decodedToken = jwtDecode(token);\n      setUsername(decodedToken.username);\n    } else {\n      setUsername(null);\n    }\n  }, []);\n  const [courses, seetCourses] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/body\").then(response => {\n      seetCourses(response.data.data);\n    }).catch(error => {\n      alert(error.message);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: courses.map(course => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(SingleCourse, {\n          children: course[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, course[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Body, \"XxoEwts8drgC1eeOevxsKB56aG4=\");\n_c = Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useEffect","jwtDecode","axios","SingleCourse","jsxDEV","_jsxDEV","Body","_s","token","localStorage","getItem","decodedToken","setUsername","username","courses","seetCourses","get","then","response","data","catch","error","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","course","_c","$RefreshReg$"],"sources":["D:/Uni/SideStudies/myProject/frontend/src/components/Body.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport axios from \"axios\";\r\n\r\nimport SingleCourse from \"./SingleCourse\";\r\n\r\nexport default function Body() {\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n\r\n    if (token) {\r\n      // Decode the token and extract the username\r\n      const decodedToken = jwtDecode(token);\r\n      setUsername(decodedToken.username); // Assuming the username is stored in the token\r\n    } else {\r\n      setUsername(null);\r\n    }\r\n  }, []);\r\n  const [username, setUsername] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n\r\n    if (token) {\r\n      const decodedToken = jwtDecode(token);\r\n      setUsername(decodedToken.username);\r\n    } else {\r\n      setUsername(null);\r\n    }\r\n  }, []);\r\n\r\n  const [courses, seetCourses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/body\")\r\n      .then((response) => {\r\n        seetCourses(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Courses</h1>\r\n      <ul>\r\n        {courses.map((course) => (\r\n          <li key={course[0]}>\r\n            <SingleCourse>{course[1]}</SingleCourse>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7BP,SAAS,CAAC,MAAM;IACd,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAE/C,IAAIF,KAAK,EAAE;MACT;MACA,MAAMG,YAAY,GAAGV,SAAS,CAACO,KAAK,CAAC;MACrCI,WAAW,CAACD,YAAY,CAACE,QAAQ,CAAC,CAAC,CAAC;IACtC,CAAC,MAAM;MACLD,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EACN,MAAM,CAACC,QAAQ,EAAED,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAE/C,IAAIF,KAAK,EAAE;MACT,MAAMG,YAAY,GAAGV,SAAS,CAACO,KAAK,CAAC;MACrCI,WAAW,CAACD,YAAY,CAACE,QAAQ,CAAC;IACpC,CAAC,MAAM;MACLD,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACE,OAAO,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACdE,KAAK,CACFc,GAAG,CAAC,4BAA4B,CAAC,CACjCC,IAAI,CAAEC,QAAQ,IAAK;MAClBH,WAAW,CAACG,QAAQ,CAACC,IAAI,CAACA,IAAI,CAAC;IACjC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBvB,OAAA;MAAAmB,QAAA,EACGV,OAAO,CAACe,GAAG,CAAEC,MAAM,iBAClBzB,OAAA;QAAAmB,QAAA,eACEnB,OAAA,CAACF,YAAY;UAAAqB,QAAA,EAAEM,MAAM,CAAC,CAAC;QAAC;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe;MAAC,GADjCE,MAAM,CAAC,CAAC,CAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACrB,EAAA,CAlDuBD,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}