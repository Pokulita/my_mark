{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uni\\\\SideStudies\\\\myProject\\\\frontend\\\\src\\\\pages\\\\Home.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport Greeting from \"../components/Greeting\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Home extends Component {\n  render() {\n    const [username, setUsername] = useState(null);\n\n    // Check token on component mount\n    useEffect(() => {\n      const token = localStorage.getItem(\"authToken\");\n      if (token) {\n        // Decode the token and extract the username\n        const decodedToken = jwtDecode(token);\n        setUsername(decodedToken.username); // Assuming the username is stored in the token\n      } else {\n        setUsername(null);\n      }\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Greeting, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","useState","useEffect","Greeting","jsxDEV","_jsxDEV","Home","render","username","setUsername","token","localStorage","getItem","decodedToken","jwtDecode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/Uni/SideStudies/myProject/frontend/src/pages/Home.js"],"sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\n\r\nimport Greeting from \"../components/Greeting\";\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    const [username, setUsername] = useState(null);\r\n\r\n    // Check token on component mount\r\n    useEffect(() => {\r\n      const token = localStorage.getItem(\"authToken\");\r\n\r\n      if (token) {\r\n        // Decode the token and extract the username\r\n        const decodedToken = jwtDecode(token);\r\n        setUsername(decodedToken.username); // Assuming the username is stored in the token\r\n      } else {\r\n        setUsername(null);\r\n      }\r\n    }, []);\r\n    return (\r\n      <div>\r\n        <Greeting />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE7D,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,MAAMC,IAAI,SAASN,SAAS,CAAC;EAC1CO,MAAMA,CAAA,EAAG;IACP,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;IAE9C;IACAC,SAAS,CAAC,MAAM;MACd,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAE/C,IAAIF,KAAK,EAAE;QACT;QACA,MAAMG,YAAY,GAAGC,SAAS,CAACJ,KAAK,CAAC;QACrCD,WAAW,CAACI,YAAY,CAACL,QAAQ,CAAC,CAAC,CAAC;MACtC,CAAC,MAAM;QACLC,WAAW,CAAC,IAAI,CAAC;MACnB;IACF,CAAC,EAAE,EAAE,CAAC;IACN,oBACEJ,OAAA;MAAAU,QAAA,eACEV,OAAA,CAACF,QAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAEV;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}