{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uni\\\\SideStudies\\\\myProject\\\\frontend\\\\src\\\\components\\\\CourseList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseList = ({\n  studentId\n}) => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [studentCourses, setStudentCourses] = useState({});\n  useEffect(() => {\n    // Fetch courses for the student\n    axios.get(\"http://localhost:5000/courses\").then(response => {\n      setCourses(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching courses:\", error);\n    });\n\n    // Fetch student's course pass statuses\n    axios.get(`http://localhost:5000/student_courses?student_id=${studentId}`).then(response => {\n      const passedCourses = response.data.reduce((acc, {\n        course_name,\n        passed\n      }) => {\n        acc[course_name] = passed;\n        return acc;\n      }, {});\n      setStudentCourses(passedCourses);\n    }).catch(error => {\n      console.error(\"Error fetching student courses:\", error);\n    });\n  }, [studentId]);\n\n  // Handle course pass/unmark action\n  const handlePassClick = (courseId, courseName) => {\n    const passedStatus = !studentCourses[courseName];\n    axios.post(\"http://localhost:5000/update_passed_course\", {\n      student_id: studentId,\n      course_id: courseId,\n      passed: passedStatus\n    }).then(() => {\n      setStudentCourses(prevState => ({\n        ...prevState,\n        [courseName]: passedStatus\n      }));\n      alert(`Course ${courseName} marked as ${passedStatus ? \"Passed\" : \"Not Passed\"}`);\n    }).catch(error => {\n      console.error(\"Error updating pass status:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Course Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ECTS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: courses.map(course => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: course.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: course.ects\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: studentCourses[course.name] ? \"Passed\" : \"Not Passed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handlePassClick(course.id, course.name),\n              children: studentCourses[course.name] ? \"Unmark Passed\" : \"Mark as Passed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, course.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseList, \"uYrFV8845GtWWfg+TvN6oNVguxo=\");\n_c = CourseList;\nexport default CourseList;\nvar _c;\n$RefreshReg$(_c, \"CourseList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","CourseList","studentId","_s","courses","setCourses","studentCourses","setStudentCourses","get","then","response","data","catch","error","console","passedCourses","reduce","acc","course_name","passed","handlePassClick","courseId","courseName","passedStatus","post","student_id","course_id","prevState","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","course","name","ects","onClick","id","_c","$RefreshReg$"],"sources":["D:/Uni/SideStudies/myProject/frontend/src/components/CourseList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst CourseList = ({ studentId }) => {\r\n  const [courses, setCourses] = useState([]);\r\n  const [studentCourses, setStudentCourses] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Fetch courses for the student\r\n    axios\r\n      .get(\"http://localhost:5000/courses\")\r\n      .then((response) => {\r\n        setCourses(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching courses:\", error);\r\n      });\r\n\r\n    // Fetch student's course pass statuses\r\n    axios\r\n      .get(`http://localhost:5000/student_courses?student_id=${studentId}`)\r\n      .then((response) => {\r\n        const passedCourses = response.data.reduce(\r\n          (acc, { course_name, passed }) => {\r\n            acc[course_name] = passed;\r\n            return acc;\r\n          },\r\n          {}\r\n        );\r\n        setStudentCourses(passedCourses);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching student courses:\", error);\r\n      });\r\n  }, [studentId]);\r\n\r\n  // Handle course pass/unmark action\r\n  const handlePassClick = (courseId, courseName) => {\r\n    const passedStatus = !studentCourses[courseName];\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/update_passed_course\", {\r\n        student_id: studentId,\r\n        course_id: courseId,\r\n        passed: passedStatus,\r\n      })\r\n      .then(() => {\r\n        setStudentCourses((prevState) => ({\r\n          ...prevState,\r\n          [courseName]: passedStatus,\r\n        }));\r\n        alert(\r\n          `Course ${courseName} marked as ${\r\n            passedStatus ? \"Passed\" : \"Not Passed\"\r\n          }`\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating pass status:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Courses</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Course Name</th>\r\n            <th>ECTS</th>\r\n            <th>Status</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {courses.map((course) => (\r\n            <tr key={course.id}>\r\n              <td>{course.name}</td>\r\n              <td>{course.ects}</td>\r\n              <td>{studentCourses[course.name] ? \"Passed\" : \"Not Passed\"}</td>\r\n              <td>\r\n                <button onClick={() => handlePassClick(course.id, course.name)}>\r\n                  {studentCourses[course.name]\r\n                    ? \"Unmark Passed\"\r\n                    : \"Mark as Passed\"}\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}