{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uni\\\\SideStudies\\\\myProject\\\\frontend\\\\src\\\\components\\\\Greeting.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jwtDecode } from \"jwt-decode\"; // You can use this library to decode JWT tokens\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Greeting() {\n  _s();\n  const [username, setUsername] = useState(null);\n\n  // Check token on component mount\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      // Decode the token and extract the username\n      const decodedToken = jwtDecode(token);\n      setUsername(decodedToken.username); // Assuming the username is stored in the token\n    } else {\n      setUsername(null);\n    }\n  }, []); // Empty array ensures this effect runs only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: username ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this) // Display username if token is present\n      : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Greeting, \"Tll88kuSsLVx4FtakfCyQkhtKNU=\");\n_c = Greeting;\nexport default Greeting;\nvar _c;\n$RefreshReg$(_c, \"Greeting\");","map":{"version":3,"names":["React","useState","useEffect","jwtDecode","jsxDEV","_jsxDEV","Greeting","_s","username","setUsername","token","localStorage","getItem","decodedToken","children","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["D:/Uni/SideStudies/myProject/frontend/src/components/Greeting.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\"; // You can use this library to decode JWT tokens\r\n\r\nfunction Greeting() {\r\n  const [username, setUsername] = useState(null);\r\n\r\n  // Check token on component mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n\r\n    if (token) {\r\n      // Decode the token and extract the username\r\n      const decodedToken = jwtDecode(token);\r\n      setUsername(decodedToken.username); // Assuming the username is stored in the token\r\n    } else {\r\n      setUsername(null);\r\n    }\r\n  }, []); // Empty array ensures this effect runs only once when the component mounts\r\n\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        {username ? (\r\n          <h1>Welcome, {username}</h1> // Display username if token is present\r\n        ) : (\r\n          <li>\r\n            <a href=\"/login\">Login</a> {/* Show login link if no token */}\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Greeting;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAE/C,IAAIF,KAAK,EAAE;MACT;MACA,MAAMG,YAAY,GAAGV,SAAS,CAACO,KAAK,CAAC;MACrCD,WAAW,CAACI,YAAY,CAACL,QAAQ,CAAC,CAAC,CAAC;IACtC,CAAC,MAAM;MACLC,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEJ,OAAA;IAAAS,QAAA,eACET,OAAA;MAAAS,QAAA,EACGN,QAAQ,gBACPH,OAAA;QAAAS,QAAA,GAAI,WAAS,EAACN,QAAQ;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,CAAC;MAAA,eAE7Bb,OAAA;QAAAS,QAAA,gBACET,OAAA;UAAGc,IAAI,EAAC,QAAQ;UAAAL,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACX,EAAA,CA7BQD,QAAQ;AAAAc,EAAA,GAARd,QAAQ;AA+BjB,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}