{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uni\\\\SideStudies\\\\myProject\\\\frontend\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  // Step 1: Initialize state to store user inputs\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [errors, setErrors] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  // Step 2: Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Step 3: Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Reset errors\n    setErrors({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    });\n\n    // Validate the form\n    if (!formData.username || !formData.email || !formData.password || !formData.confirmPassword) {\n      setErrors({\n        ...errors,\n        form: \"All fields are required.\"\n      });\n      return;\n    }\n    if (formData.password !== formData.confirmPassword) {\n      setErrors({\n        ...errors,\n        confirmPassword: \"Passwords do not match.\"\n      });\n      return;\n    }\n\n    // Send the data to your backend API (e.g., using fetch or axios)\n    const userData = {\n      username: formData.username,\n      email: formData.email,\n      password: formData.password\n    };\n\n    // You can make an API call here to send user data to the server\n    fetch(\"https://your-backend-api.com/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        alert(\"Registration successful!\");\n      } else {\n        alert(\"Registration failed: \" + data.message);\n      }\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      alert(\"Error during registration\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), errors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmPassword\",\n          value: formData.confirmPassword,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), errors.form && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.form\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"xEOoRC/5JPubKVcFP5Wzt8LzYkY=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","username","email","password","confirmPassword","errors","setErrors","handleInputChange","e","name","value","target","handleSubmit","preventDefault","form","userData","fetch","method","headers","body","JSON","stringify","then","response","json","data","success","alert","message","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["D:/Uni/SideStudies/myProject/frontend/src/pages/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Register() {\r\n  // Step 1: Initialize state to store user inputs\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  // Step 2: Handle form input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  // Step 3: Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Reset errors\r\n    setErrors({ username: \"\", email: \"\", password: \"\", confirmPassword: \"\" });\r\n\r\n    // Validate the form\r\n    if (\r\n      !formData.username ||\r\n      !formData.email ||\r\n      !formData.password ||\r\n      !formData.confirmPassword\r\n    ) {\r\n      setErrors({ ...errors, form: \"All fields are required.\" });\r\n      return;\r\n    }\r\n\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setErrors({ ...errors, confirmPassword: \"Passwords do not match.\" });\r\n      return;\r\n    }\r\n\r\n    // Send the data to your backend API (e.g., using fetch or axios)\r\n    const userData = {\r\n      username: formData.username,\r\n      email: formData.email,\r\n      password: formData.password,\r\n    };\r\n\r\n    // You can make an API call here to send user data to the server\r\n    fetch(\"https://your-backend-api.com/register\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(userData),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          alert(\"Registration successful!\");\r\n        } else {\r\n          alert(\"Registration failed: \" + data.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n        alert(\"Error during registration\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Register</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Username</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={formData.username}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          {errors.username && <span>{errors.username}</span>}\r\n        </div>\r\n\r\n        <div>\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          {errors.email && <span>{errors.email}</span>}\r\n        </div>\r\n\r\n        <div>\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          {errors.password && <span>{errors.password}</span>}\r\n        </div>\r\n\r\n        <div>\r\n          <label>Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={formData.confirmPassword}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          {errors.confirmPassword && <span>{errors.confirmPassword}</span>}\r\n        </div>\r\n\r\n        <button type=\"submit\">Register</button>\r\n\r\n        {errors.form && <p>{errors.form}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}