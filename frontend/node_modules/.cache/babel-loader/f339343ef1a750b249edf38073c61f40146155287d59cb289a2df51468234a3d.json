{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uni\\\\SideStudies\\\\myProject\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport CourseList from \"../components/CourseList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [userId, setuserId] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      // Decode the token and extract the username\n      const decodedToken = jwtDecode(token);\n      setuserId(decodedToken.id); // Assuming the username is stored in the token\n    } else {\n      setuserId(null);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CourseList, {\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"GtvpiKwMP3QbaLL3nCtinaISMRI=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","jwtDecode","CourseList","jsxDEV","_jsxDEV","Home","_s","userId","setuserId","token","localStorage","getItem","decodedToken","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Uni/SideStudies/myProject/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nimport CourseList from \"../components/CourseList\";\r\n\r\nexport default function Home() {\r\n  const [userId, setuserId] = useState(null);\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n\r\n    if (token) {\r\n      // Decode the token and extract the username\r\n      const decodedToken = jwtDecode(token);\r\n      setuserId(decodedToken.id); // Assuming the username is stored in the token\r\n    } else {\r\n      setuserId(null);\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <CourseList userId={userId} />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,YAAY;AAEtC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1CC,SAAS,CAAC,MAAM;IACd,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAE/C,IAAIF,KAAK,EAAE;MACT;MACA,MAAMG,YAAY,GAAGX,SAAS,CAACQ,KAAK,CAAC;MACrCD,SAAS,CAACI,YAAY,CAACC,EAAE,CAAC,CAAC,CAAC;IAC9B,CAAC,MAAM;MACLL,SAAS,CAAC,IAAI,CAAC;IACjB;EACF,CAAC,EAAE,EAAE,CAAC;EACN,oBACEJ,OAAA;IAAAU,QAAA,eACEV,OAAA,CAACF,UAAU;MAACK,MAAM,EAAEA;IAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV;AAACZ,EAAA,CAlBuBD,IAAI;AAAAc,EAAA,GAAJd,IAAI;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}